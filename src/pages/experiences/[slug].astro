---
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { Experience } from "../../types/experience";
import { getCollection } from "astro:content";
import { resolveAssetUrl, pickImageString, sanitizeStringForUI } from "../../lib/utils";
  
// Generate static paths from collection entries
export async function getStaticPaths() {
  const entries = await getCollection("experiences");
  const paths = (entries ?? [])
    .filter((e: any) => e.data?.draft !== true)
    .map((e: any) => {
      const canonicalSlug =
        typeof e.slug === "string" && e.slug.length > 0
          ? e.slug
          : String(e.id ?? "").replace(/\.(md|mdx)$/i, "");
      return { params: { slug: canonicalSlug } };
    });
  return paths;
}
 
// Props / derived values (load the single experience document by slug)
const slugParam = (Astro.params as any)?.slug as string;

const experiencesEntries = await getCollection("experiences");
const entry =
  (experiencesEntries ?? []).find((e: any) => {
    const canonicalSlug =
      typeof e.slug === "string" && e.slug.length > 0
        ? e.slug
        : String(e.id ?? "").replace(/\.(md|mdx)$/i, "");
    const canonicalId = String(e.id ?? "").replace(/\.(md|mdx)$/i, "");
    return (
      slugParam === canonicalSlug ||
      slugParam === canonicalId ||
      slugParam === String(e.id ?? "")
    );
  }) ?? null;

if (!entry) {
  throw new Error(`Experience not found for slug: ${slugParam}`);
}
const experience = entry.data as any as Experience;
 
// Derived and resilient values
const title = experience?.title ?? "Untitled";
const companyName = experience?.company?.name ?? "Company Name Not Available";
// Extract a string candidate from image field and resolve with shared helper
const companyLogo = resolveAssetUrl(pickImageString(experience?.company?.image)) ?? "/placeholder-logo.png";
const role = experience?.logistics?.role ?? "Role Not Specified";
const duration = experience?.logistics?.duration ?? "Duration Not Specified";
// Sanitize tools/skills before splitting/rendering
const tools = sanitizeStringForUI(experience?.technologies?.tools) || "N/A";
const skills = sanitizeStringForUI(experience?.technologies?.skills) || "N/A";
const responsibilities = Array.isArray(experience?.work?.responsibilities)
  ? (experience.work!.responsibilities!.filter((r) => r?.duties) as { duties?: string }[])
  : [];
const achievements = Array.isArray(experience?.work?.achievements)
  ? (experience.work!.achievements!.filter((a) => a?.points) as { points?: string }[])
  : [];
const showcase = experience?.showcase && experience.showcase.link && experience.showcase.description ? [experience.showcase] : [];
---
 
<BaseLayout title={title}>
    <link slot="head" rel="stylesheet" href="/styles/slugs/experiences.css" />
    <main class="experience-page-container">
        <article class="experience-page-div">
            <!-- Main Content Column -->
            <div class="main-content">
                <section id="overview" aria-labelledby="experience-title">
                    <div class="experience-header">
                        <div class="company-info" role="banner">
                            <img
                                src={companyLogo}
                                alt={`${companyName} logo`}
                                class="company-logo"
                                width="80"
                                height="80"
                                loading="eager"
                                decoding="async"
                                aria-hidden="true"
                            />
                            <div class="title-container">
                                <h1 id="experience-title" class="experience-title" >{title}</h1>
                                <p class="company-name"><strong>{companyName}</strong></p>
                            </div>
                        </div>
                    </div>
                </section>
 
                <section id="responsibilities" aria-labelledby="responsibilities-title">
                    <h2 id="responsibilities-title" >Key Responsibilities</h2>
                    {responsibilities.length > 0 ? (
                        <ul class="responsibilities-list" role="list">
                            {responsibilities.map((item, index) => (
                                <li aria-label={`Responsibility ${index + 1}`}><span class="highlight">{item.duties}</span></li>
                            ))}
                        </ul>
                    ) : (
                        <p class="empty-state">No responsibilities available.</p>
                    )}
                </section>
 
                <section id="achievements" aria-labelledby="achievements-title">
                    <h2 id="achievements-title" >Notable Achievements</h2>
                    {achievements.length > 0 ? (
                        <ul class="achievements-list" role="list">
                            {achievements.map((item, index) => (
                                <li aria-label={`Achievement ${index + 1}`}><strong>{item.points}</strong></li>
                            ))}
                        </ul>
                    ) : (
                        <p class="empty-state">No achievements available.</p>
                    )}
                </section>
            </div>
 
            <!-- Sidebar Column -->
            <aside class="sidebar-content" aria-label="Experience details">
                <div class="sidebar-card">
                    <h3 id="logistics-title">Logistics</h3>
                    <div class="experience-meta">
                        <div class="meta-item">
                            <span class="meta-label" id="role-label">Role</span>
                            <span class="meta-value" aria-labelledby="role-label"><strong>{role}</strong></span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label" id="duration-label">Duration</span>
                            <span class="meta-value" aria-labelledby="duration-label"><strong>{duration}</strong></span>
                        </div>
                    </div>
                </div>
                <div class="sidebar-card">
                    <h3 id="tech-title">Technology Stack</h3>
                    <div class="tech-section">
                        <div class="tech-item">
                            <h4 id="tools-title">Tools & Technologies</h4>
                            <div class="tech-text" aria-labelledby="tools-title">
                              {(tools || 'N/A').split(',').map((t: string) => t.trim()).filter(Boolean).join(', ')}
                            </div>
                        </div>
                        <div class="tech-item">
                            <h4 id="skills-title">Skills</h4>
                            <div class="tech-text" aria-labelledby="skills-title">
                              {(skills || 'N/A').split(',').map((s: string) => s.trim()).filter(Boolean).join(', ')}
                            </div>
                        </div>
                    </div>
                </div>
                {showcase.length > 0 && (
                    <div class="sidebar-card">
                        <section id="showcase" aria-labelledby="showcase-title">
                            <h3 id="showcase-title" tabindex="-1">Project Showcase</h3>
                            <div class="showcase-grid">
                                {showcase.map((item) => (
                                    <a href={item.link}
                                       class="showcase-item"
                                       target="_blank"
                                       rel="noopener noreferrer"
                                       aria-label={`View project: ${item.description}`}>
                                        <p><strong>{item.description}</strong></p>
                                        <span class="showcase-link">View Project <span class="sr-only">opens in new tab</span>â†’</span>
                                    </a>
                                ))}
                            </div>
                        </section>
                    </div>
                )}
            </aside>
        </article>
    </main>
</BaseLayout>
 