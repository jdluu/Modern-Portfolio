---
import {getAllExperiences} from '../../lib/cosmic';
import BaseLayout from "../../layouts/BaseLayout.astro";

interface Metadata {
    description: string;
    company: {
        name: string;
        logo: {
            url: string;
            imgix_url: string;
        };
    };
    logistics: {
        duration: string;
        role: string;
    };
    technologies: {
        tools: string;
        skills: string;
    };
    work: {
        responsibilities: { duties: string }[];
        achievements: { points: string }[];
    };
    showcase?: {
        link: string;
        description: string;
    }[];
}

interface PageProps {
    title: string;
    metadata: Metadata;
}

export async function getStaticPaths() {
    const experiences: { slug: string; title: string; metadata: Metadata }[] = await getAllExperiences();

    return experiences.map(({slug, title, metadata}) => {
        return {
            params: { slug },
            props: { title, metadata },
        };
    });
}

const {title, metadata} = Astro.props;
---

<BaseLayout title={title}>
    <nav id="left-tray" aria-label="Table of Contents">
        <ul id="table-of-contents" role="navigation">
            <li><a href="#overview" id="ido" class="nav-item" aria-current="false">Overview</a></li>
            <li><a href="#responsibilities" id="idr" class="nav-item" aria-current="false">Responsibilities</a></li>
            <li><a href="#achievements" id="ida" class="nav-item" aria-current="false">Key Achievements</a></li>
            {metadata.showcase && (
                <li><a href="#showcase" id="ids" class="nav-item" aria-current="false">Showcase</a></li>
            )}
        </ul>
    </nav>

    <main class="experience-page-container">
        <article class="experience-page-div">
            <section id="overview" aria-labelledby="experience-title">
                <div class="experience-header">
                    <div class="company-info">
                        <img 
                            src={metadata.company.logo.imgix_url} 
                            alt={`${metadata.company.name} logo`}
                            class="company-logo"
                        />
                        <div class="title-container">
                            <h1 id="experience-title" class="experience-title">{title}</h1>
                            <p class="company-name">{metadata.company.name}</p>
                        </div>
                    </div>
                    <div class="experience-meta">
                        <div class="meta-item">
                            <span class="meta-label">Role</span>
                            <span class="meta-value">{metadata.logistics.role}</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Duration</span>
                            <span class="meta-value">{metadata.logistics.duration}</span>
                        </div>
                    </div>
                </div>
                <p class="section-content lead">{metadata.description}</p>
                <div class="tech-section">
                    <div class="tech-item">
                        <h3>Tools & Technologies</h3>
                        <p>{metadata.technologies.tools}</p>
                    </div>
                    <div class="tech-item">
                        <h3>Skills</h3>
                        <p>{metadata.technologies.skills}</p>
                    </div>
                </div>
            </section>

            <section id="responsibilities" aria-labelledby="responsibilities-title">
                <h2 id="responsibilities-title">Key Responsibilities</h2>
                <ul class="responsibilities-list">
                    {metadata.work.responsibilities.map((item) => (
                        <li>{item.duties}</li>
                    ))}
                </ul>
            </section>

            <section id="achievements" aria-labelledby="achievements-title">
                <h2 id="achievements-title">Notable Achievements</h2>
                <ul class="achievements-list">
                    {metadata.work.achievements.map((item) => (
                        <li>{item.points}</li>
                    ))}
                </ul>
            </section>

            {metadata.showcase && (
                <section id="showcase" aria-labelledby="showcase-title">
                    <h2 id="showcase-title">Project Showcase</h2>
                    <div class="showcase-grid">
                        {metadata.showcase.map((item) => (
                            <a href={item.link} class="showcase-item" target="_blank" rel="noopener noreferrer">
                                <p>{item.description}</p>
                                <span class="showcase-link">View Project →</span>
                            </a>
                        ))}
                    </div>
                </section>
            )}
        </article>
    </main>
</BaseLayout>

<style>
    /* Layout & Container Styles */
    .experience-page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: var(--spacing-lg);
        margin-left: 250px;
    }

    .experience-page-div {
        background: var(--bg-secondary);
        border-radius: 12px;
        padding: var(--spacing-lg);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Header Styles */
    .experience-header {
        margin-bottom: var(--spacing-lg);
        border-bottom: 1px solid var(--border-color);
        padding-bottom: var(--spacing-lg);
    }

    .company-info {
        display: flex;
        align-items: center;
        gap: var(--spacing-md);
        margin-bottom: var(--spacing-md);
    }

    .company-logo {
        width: 80px;
        height: 80px;
        object-fit: contain;
        border-radius: 8px;
        background: white;
        padding: 8px;
    }

    .title-container {
        flex-grow: 1;
    }

    .experience-title {
        font-size: var(--text-2xl);
        margin: 0;
        color: var(--text-color);
    }

    .company-name {
        font-size: var(--text-lg);
        color: var(--text-muted);
        margin: var(--spacing-xs) 0 0;
    }

    .experience-meta {
        display: flex;
        gap: var(--spacing-lg);
        flex-wrap: wrap;
    }

    .meta-item {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-xs);
    }

    .meta-label {
        font-size: var(--text-sm);
        color: var(--text-muted);
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .meta-value {
        font-size: var(--text-md);
        color: var(--text-color);
    }

    /* Content Styles */
    .lead {
        font-size: var(--text-lg);
        line-height: 1.6;
        color: var(--text-muted);
        margin: var(--spacing-md) 0;
    }

    .tech-section {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: var(--spacing-md);
        margin: var(--spacing-lg) 0;
        padding: var(--spacing-md);
        background: var(--bg-primary);
        border-radius: 8px;
    }

    .tech-item {
        padding: var(--spacing-md);
    }

    .tech-item h3 {
        font-size: var(--text-md);
        margin-bottom: var(--spacing-sm);
        color: var(--text-color);
    }

    .tech-item p {
        color: var(--text-muted);
        line-height: 1.6;
    }

    /* Lists Styles */
    .responsibilities-list,
    .achievements-list {
        list-style: none;
        padding: 0;
        margin: var(--spacing-md) 0;
    }

    .responsibilities-list li,
    .achievements-list li {
        position: relative;
        padding-left: 1.5em;
        margin-bottom: var(--spacing-sm);
        line-height: 1.6;
    }

    .responsibilities-list li::before {
        content: "•";
        position: absolute;
        left: 0;
        color: var(--accent-color);
    }

    .achievements-list li::before {
        content: "★";
        position: absolute;
        left: 0;
        color: var(--accent-color);
    }

    /* Showcase Styles */
    .showcase-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: var(--spacing-md);
        margin-top: var(--spacing-md);
    }

    .showcase-item {
        background: var(--bg-primary);
        padding: var(--spacing-md);
        border-radius: 8px;
        text-decoration: none;
        color: var(--text-color);
        transition: all 0.3s ease;
        border: 1px solid var(--border-color);
    }

    .showcase-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .showcase-link {
        display: inline-block;
        margin-top: var(--spacing-sm);
        color: var(--accent-color);
        font-weight: 500;
    }

    /* Section Titles */
    h2 {
        font-size: var(--text-xl);
        color: var(--text-color);
        margin: var(--spacing-xl) 0 var(--spacing-md);
        padding-bottom: var(--spacing-sm);
        border-bottom: 2px solid var(--accent-color);
    }

    /* Navigation Styles */
    #left-tray {
        position: fixed;
        top: 80px;
        left: 0;
        width: 250px;
        height: calc(100vh - 80px);
        padding: var(--spacing-lg);
        background: var(--bg-secondary);
        border-right: 1px solid var(--border-color);
        overflow-y: auto;
    }

    #table-of-contents {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-item {
        display: block;
        padding: var(--spacing-sm);
        margin-bottom: var(--spacing-xs);
        color: var(--text-muted);
        text-decoration: none;
        border-radius: 4px;
        transition: all 0.2s ease;
    }

    .nav-item:hover {
        background: var(--bg-primary);
        color: var(--text-color);
    }

    .nav-item[aria-current="true"] {
        background: var(--bg-primary);
        color: var(--accent-color);
        font-weight: 500;
    }

    /* Responsive Styles */
    @media (max-width: 1024px) {
        .experience-page-container {
            margin-left: 0;
            padding: var(--spacing-md);
        }

        #left-tray {
            display: none;
        }
    }

    @media (max-width: 768px) {
        .experience-header {
            flex-direction: column;
        }

        .company-info {
            flex-direction: column;
            text-align: center;
        }

        .experience-meta {
            justify-content: center;
        }

        .tech-section {
            grid-template-columns: 1fr;
        }

        .showcase-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tableOfContents = document.getElementById("table-of-contents");
        const sections = document.querySelectorAll("section[id]");
        const navItems = document.querySelectorAll(".nav-item");

        const observerOptions = {
            rootMargin: "-20% 0px -75%",
            threshold: 0,
        };

        function resetCurrentNav() {
            navItems.forEach(item => {
                item.setAttribute("aria-current", "false");
            });
        }

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const id = entry.target.getAttribute("id");
                    const navItem = document.getElementById(`id${id.charAt(0)}`);
                    
                    if (navItem) {
                        resetCurrentNav();
                        navItem.setAttribute("aria-current", "true");
                    }
                }
            });
        }, observerOptions);

        sections.forEach((section) => {
            observer.observe(section);
        });
    });
</script>