---
import ExperienceCardList from "../ui/ExperienceCardList";
import ExperienceCard from "../ui/ExperienceCard.astro";
import { getCollection } from "astro:content";
  
const rawCollection = (await getCollection("experiencecards")) ?? [];
function mapEntryToExperience(item: any) {
  return {
    title: item?.data?.title ?? "Untitled",
    slug: String(item?.id ?? "").toLowerCase(),
    metadata: item?.data?.metadata ?? {},
  };
}
const experiences = (rawCollection ?? []).map(mapEntryToExperience);
---
<section class="content-section">
	<h2 id="experience" class="page-h2">Experience</h2>
	<!-- Client island (controls + visibility) -->
	<ExperienceCardList client:load initialItems={experiences} />

	<!-- Server-rendered grid of ExperienceCard items for SEO and initial markup.
	     The client island will toggle visibility of these cards via data-slug attributes. -->
	<div class="experience-grid">
		{experiences.map((e) => (
			<div class="experience-item" data-slug={String(e.slug ?? "").replace(/\.(md|mdx)$/, "")}>
				<ExperienceCard item={e} />
			</div>
		))}
	</div>

	<!-- Pagination portal: client island will move the pagination controls here so they render
	     visually underneath the server-rendered card grid while controls remain in the client island. -->
	<div id="experience-pagination-portal" class="experience-pagination-portal" aria-hidden="false"></div>
</section>

