---
import PostsList from "../ui/PostsList";
import Post from "../ui/Post.astro";
import type { PostIndexItem } from "../../types/post";
 
// Accept posts from the parent page (server-side fetched in /pages/blog.astro)
const { posts } = Astro.props as { posts: PostIndexItem[] };
 
---
<section class="content-section blog-section">
  <h2 id="blog" class="page-h2">Blog</h2>
  <p class="section-desc">
    <strong>Quick Projects and Ideas.</strong>
  </p>
 
  <div class="posts-container">
    <!-- Client island: controls, filtering, and pagination only -->
    <PostsList client:load initialItems={posts} />
    <!-- Server-rendered list for SEO & initial markup. Each Post renders an <li data-slug="...">.
         The client island controls visibility of these server nodes to implement pagination/filters. -->
    <ul class="post-list" role="list" aria-hidden="false">
      {posts.map((p) => (
        <Post item={p} />
      ))}
    </ul>

    <!-- Pagination placeholder: the PostsList island will render interactive pagination
         controls here so they appear visually below the posts list. -->
    <div class="posts-pagination-placeholder" aria-hidden="false"></div>
  </div>
</section>
 
<style>
  /* Make list and card selectors global so they affect nested/server-rendered Post.astro markup */
  :global(.post-list) {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    row-gap: 1.25rem; /* space between posts */
  }
  :global(.post-item) {
    margin: 0;
  }

  .page-h2 {
    font-family: var(--m3-font-family-display);
    font-size: var(--m3-font-headline-large);
    color: var(--m3-color-on-background);
    text-align: center;
    margin-bottom: 1rem;
  }

  .section-desc {
    font-size: var(--m3-font-body-large);
    color: var(--m3-color-on-surface-variant);
    text-align: center;
    margin-bottom: 2.5rem;
  }

  .content-section.blog-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2.5rem 1rem;
    max-width: 64rem;
    margin: 0 auto;
  }

  .posts-container {
    width: 100%;
  }

  /* Card (global) */
  :global(.post-card) {
    display: block;
    width: 100%;
    background-color: var(--m3-color-surface);
    color: var(--m3-color-on-surface);
    text-decoration: none;
    border-bottom: 0 !important;
    border: 2px solid var(--m3-color-outline);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 1px 2px rgba(0,0,0,0.06);
    transition: border-color .2s ease, box-shadow .2s ease, color .2s ease, transform .12s ease, outline-color .12s ease;
    cursor: pointer;

    /* Always-visible outline (keeps visual separation even if border blends with background). */
    outline: 2px solid var(--m3-color-outline-variant);
    outline-offset: 2px;
  }

  :global(.post-card):hover {
    border-color: var(--m3-color-primary);
    box-shadow: 0 10px 24px rgba(0,0,0,0.12);
    transform: translateY(-2px);
    outline-color: var(--m3-color-primary);
  }

  /* Keep strong, accessible focus styles while harmonizing with the new outline */
  :global(.post-card):focus-visible {
    outline: 3px solid color-mix(in oklab, var(--m3-color-primary) 20%, transparent);
    outline-offset: 4px;
    box-shadow:
      0 0 0 4px var(--m3-color-primary) inset,
      0 6px 18px rgba(0,0,0,0.14);
  }

  /* Pagination placeholder styling */
  .posts-pagination-placeholder {
    margin-top: 1.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  /* Card content */
  .post-card-title {
     margin: 0;
     font-size: clamp(1.6rem, 2vw, 2.25rem);
     font-weight: 600;
     color: var(--m3-color-on-surface);
     transition: color .2s ease;
   }
  .post-card:hover .post-card-title {
    color: var(--m3-color-primary);
  }

  .post-card-date {
     display: block;
     margin-top: 0.25rem;
     font-size: clamp(1rem, 0.9vw, 1.125rem);
     color: var(--m3-color-on-surface-variant);
   }

  /* Tag row (global) - ensures spacing between tags for server-rendered tags */
  :global(.post-card-tags) {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem; /* user's chosen spacing */
    margin-top: 0.75rem;
  }

  :global(.tag-chip) {
     display: inline-flex;
     align-items: center;
     border-radius: 999px;
     background-color: var(--m3-color-secondary-container);
     color: var(--m3-color-on-secondary-container);
     border: 1px solid var(--m3-color-outline-variant);
     padding: 0.25rem 0.75rem;
     font-size: clamp(0.9rem, 0.8vw, 1rem);
     font-weight: 500;
     /* ensure chips are visually separated even if gap is not applied by older UA */
     margin-right: 0.5rem;
  }

  .post-card-desc {
     margin-top: 0.75rem;
     color: var(--m3-color-on-surface-variant);
     font-size: clamp(1.1rem, 1vw, 1.25rem);
     line-height: 1.7;
   }

  /* Basic line clamp without Tailwind plugin */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Responsive controls: ensure the two control groups align/stack cleanly on small screens.
     Default: keep desktop layout where .controls-right is pushed to the end.
     At <=640px: center and stack both groups (each takes full width). */
  :global(.posts-controls) {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    align-items: center;
    margin-bottom: 1rem;
    width: 100%;
  }
  :global(.posts-controls .controls-left),
  :global(.posts-controls .controls-right) {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: center;
  }
  :global(.posts-controls .controls-right) {
    margin-left: auto;
  }
  :global(.posts-controls .btn-reset) {
    padding: 0.35rem 0.6rem;
    border-radius: 6px;
    border: 1px solid var(--m3-color-outline);
    background: transparent;
  }
  
  @media (max-width: 640px) {
    :global(.posts-controls) { justify-content: center; }
    :global(.posts-controls .controls-right) { margin-left: 0; }
    :global(.posts-controls .controls-left),
    :global(.posts-controls .controls-right) {
      flex: 1 1 100%;
      justify-content: center;
    }
    :global(.posts-controls .controls-left) { margin-bottom: 0.5rem; }
    :global(.posts-controls .controls-right) { gap: 0.5rem; }
    :global(.posts-controls .controls-right .btn-reset) { margin-left: 0.25rem; }
    /* Ensure tag panel (dialog) remains usable on narrow viewports */
    :global(.posts-controls .controls-right [role="dialog"]) {
      left: 0 !important;
      right: auto !important;
      min-width: 200px !important;
      max-width: calc(100% - 32px) !important;
    }
  }
  
  @media (min-width: 640px) {
    .content-section.blog-section { padding-left: 1.5rem; padding-right: 1.5rem; }
  }
  @media (min-width: 1024px) {
    .content-section.blog-section { padding-left: 2rem; padding-right: 2rem; }
  }
</style>