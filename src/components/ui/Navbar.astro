---
import ThemeToggleButton from "../ui/ThemeToggleButton.tsx";
---

<header class="header">
	<nav class="nav-container" aria-label="Main navigation">
		<div class="nav-content">
			<a href="/" class="home-link" aria-label="Home">
				<svg
					viewBox="0 0 32 32"
					xmlns="http://www.w3.org/2000/svg"
					class="home-icon"
					aria-hidden="true"
				>
					<path
						fill="currentColor"
						d="M27 18.039L16 9.501 5 18.039V14.56l11-8.54 11 8.538v3.481zm-2.75-.31v8.251h-5.5v-5.5h-5.5v5.5h-5.5v-8.25L16 11.543l8.25 6.186z"
					></path>
				</svg>
			</a>

			<div class="menu-icon-wrapper">
				<button
					id="menu-toggle-btn"
					class="menu-icon-button"
					aria-label="Toggle menu"
					aria-expanded="false"
					aria-controls="main-menu"
				>
					<svg
						class="open-icon"
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 50 50"
						aria-hidden="true"
						fill="currentColor"
					>
						<title>Open menu icon</title>
						<path
							d="M 3 8 A 2.0002 2.0002 0 1 0 3 12 L 47 12 A 2.0002 2.0002 0 1 0 47 8 L 3 8 z M 3 23 A 2.0002 2.0002 0 1 0 3 27 L 47 27 A 2.0002 2.0002 0 1 0 47 23 L 3 23 z M 3 38 A 2.0002 2.0002 0 1 0 3 42 L 47 42 A 2.0002 2.0002 0 1 0 47 38 L 3 38 z"
						></path>
					</svg>
					<svg
						class="close-icon"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="2.5"
						stroke="currentColor"
						aria-hidden="true"
					>
						<title>Close menu icon</title>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>

			<div id="main-menu" class="nav-menu-styles" aria-hidden="true">
				<ul class="nav-list">
					<li class="nav-item" role="menuitem">
						<a
							href="/about"
							class="nav-link"
							aria-current={Astro.url.pathname === "/about"
								? "page"
								: undefined}
						>
							About
						</a>
					</li>
					<li class="nav-item" role="menuitem">
						<a
							href="/work"
							class="nav-link"
							aria-current={Astro.url.pathname === "/work" ? "page" : undefined}
						>
							Work
						</a>
					</li>
					<li class="nav-item" role="menuitem">
						<a
							href="/blog/"
							class="nav-link"
							aria-current={Astro.url.pathname.startsWith("/blog")
								? "page"
								: undefined}
						>
							Blog
						</a>
					</li>
					<li class="nav-item" role="menuitem">
						<a
							href="/contact"
							class="nav-link"
							aria-current={Astro.url.pathname === "/contact"
								? "page"
								: undefined}
						>
							Contact
						</a>
					</li>
					<li class="nav-item md:hidden" role="menuitem">
						<ThemeToggleButton client:idle transition:persist />
					</li>
				</ul>
			</div>
			<div class="theme-toggle-container">
				<ThemeToggleButton client:idle transition:persist />
			</div>
		</div>
	</nav>
</header>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const menuToggleBtn = document.getElementById("menu-toggle-btn");
		const mainMenu = document.getElementById("main-menu");

		if (menuToggleBtn && mainMenu) {
			menuToggleBtn.addEventListener("click", () => {
				const isExpanded =
					menuToggleBtn.getAttribute("aria-expanded") === "true";
				menuToggleBtn.setAttribute("aria-expanded", String(!isExpanded));
				mainMenu.setAttribute("aria-hidden", String(isExpanded));
				mainMenu.classList.toggle("is-open");
				menuToggleBtn.classList.toggle("is-open");
			});

			// Close menu on link click
			mainMenu.addEventListener("click", (e) => {
				if ((e.target as HTMLElement).tagName === "A") {
					menuToggleBtn.setAttribute("aria-expanded", "false");
					mainMenu.setAttribute("aria-hidden", "true");
					mainMenu.classList.remove("is-open");
					menuToggleBtn.classList.remove("is-open");
				}
			});
		}
	});
</script>

<style>
	.header {
		position: sticky;
		top: 0;
		z-index: 100;
		background-color: var(--m3-color-surface);
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
		padding: 0 2.4rem;
	}

	.nav-container {
		display: flex;
		justify-content: space-between;
		align-items: center;
		max-width: 1280px;
		margin: 0 auto;
		width: 100%;
		height: 6.4rem;
	}

	.nav-content {
		display: flex;
		align-items: center;
		flex-grow: 1;
		gap: 1.6rem;
	}

	.home-link {
		display: flex;
		align-items: center;
		text-decoration: none;
		gap: 0.8rem;
		color: var(--m3-color-on-surface);
		margin-right: auto;
	}

	.home-icon {
		width: 2.8rem;
		height: 2.8rem;
		fill: currentColor;
	}

	.home-text {
		font-size: var(--m3-font-title-large);
		font-family: var(--m3-font-family-display);
		font-weight: 500;
	}

	.menu-icon-wrapper {
		display: block;
		margin-left: auto; /* Push to the right */
	}

	@media (min-width: 768px) {
		.menu-icon-wrapper {
			display: none !important;
		}
	}

	.menu-icon-button {
		width: 4rem;
		height: 4rem;
		display: flex;
		align-items: center;
		justify-content: center;
		color: var(--m3-color-on-surface);
		background: transparent;
		border: none;
		cursor: pointer;
		border-radius: 50%;
	}
	.menu-icon-button:focus-visible {
		outline: 2px solid var(--m3-color-primary);
		background-color: var(--m3-color-primary-container);
	}

	.menu-icon-button .close-icon {
		display: none;
	}

	.menu-icon-button.is-open .open-icon {
		display: none;
	}

	.menu-icon-button.is-open .close-icon {
		display: block;
	}

	.nav-menu-styles {
		display: none;
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		background-color: var(--m3-color-surface);
		padding: 1.6rem;
		border-top: 1px solid var(--m3-color-outline);
	}
	.nav-menu-styles.is-open {
		display: block;
	}

	@media (min-width: 768px) {
		.nav-menu-styles {
			position: static;
			background: transparent;
			padding: 0;
			border-top: none;
			display: flex !important;
			width: auto;
			/* Ensure it's always visible on desktop */
			visibility: visible;
			opacity: 1;
			transform: none;
			height: auto;
			overflow: visible;
		}
	}

	.nav-list {
		display: flex;
		flex-direction: column;
		gap: 0.8rem;
		list-style: none;
		margin: 0;
		padding: 0;
	}
	@media (min-width: 768px) {
		.nav-list {
			flex-direction: row;
			align-items: center;
			gap: 1.6rem;
		}
	}

	.nav-link {
		display: block;
		padding: 1rem 1.6rem;
		color: var(--m3-color-on-surface-variant);
		text-decoration: none;
		font-size: var(--m3-font-label-large);
		font-weight: 500;
		border-radius: 20px;
		transition: all 0.3s ease;
		position: relative;
	}

	.nav-link:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
	}

	.nav-link[aria-current="page"] {
		background-color: var(--m3-color-primary-container);
		color: var(--m3-color-on-primary-container);
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	}

	.nav-link[aria-current="page"]::after {
		content: "";
		position: absolute;
		bottom: -2px;
		left: 50%;
		transform: translateX(-50%);
		width: 6px;
		height: 6px;
		border-radius: 50%;
		background-color: var(--m3-color-primary);
	}

	.theme-toggle-container {
		display: none;
		align-items: center;
	}

	@media (min-width: 768px) {
		.theme-toggle-container {
			display: flex;
		}
	}

	.hidden,
	.nav-item.md\:hidden {
		display: none;
	}

	@media (max-width: 767px) {
		.nav-menu-styles.is-open .nav-item.md\:hidden {
			display: block;
		}
	}

	@media (min-width: 768px) {
		.md\:flex {
			display: flex;
		}
	}
</style>
