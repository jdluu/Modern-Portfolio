---
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en" data-theme="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{title}</title>
		<meta name="generator" content={Astro.generator} />
		<meta
			name="description"
			content="Portfolio of Jeffrey Luu, a web and mobile developer specializing in creating innovative and user-friendly experiences. Explore projects and skills in HTML, CSS, JS, React, and Astro."
		/>
		<meta
			name="keywords"
			content="Jeffrey Luu, UCSD, web development, La Palma, software engineer, HTML, CSS, JS, React, Astro"
		/>
		<meta name="author" content="Jeffrey Luu" />
		<meta name="robots" content="index, follow" />
		<meta name="googlebot" content="index, follow" />

		<!-- Open Graph / Social Media -->
		<meta property="og:type" content="website" />
		<meta property="og:title" content="Jeffrey Luu - Developer | Designer" />
		<meta
			property="og:description"
			content="Portfolio of Jeffrey Luu, a web and mobile developer specializing in creating innovative and user-friendly experiences. Explore projects and skills in HTML, CSS, JS, React, and Astro."
		/>
		<meta property="og:url" content={canonicalURL} />

		<!-- Twitter Card -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content="Jeffrey Luu - Developer | Designer" />
		<meta
			name="twitter:description"
			content="Portfolio of Jeffrey Luu, a web and mobile developer specializing in creating innovative and user-friendly experiences."
		/>

		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<link rel="canonical" href={canonicalURL} />
		<link rel="sitemap" href="/sitemap-index.xml" />

		<!-- Favicon -->
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<link
			rel="icon"
			type="image/png"
			sizes="150x150"
			href="/icons/ms-icon-150x150.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="310x310"
			href="/icons/ms-icon-310x310.png"
		/>

		<!-- Preload Critical Assets -->
		<link
			rel="preload"
			href="/fonts/Montserrat/static/Montserrat-Regular.ttf"
			as="font"
			type="font/ttf"
			crossorigin
		/>
		<link
			rel="preload"
			href="/fonts/Open_Sans/static/OpenSans-Regular.ttf"
			as="font"
			type="font/ttf"
			crossorigin
		/>
		<link
			rel="preload"
			href="/fonts/Lato/Lato-Regular.ttf"
			as="font"
			type="font/ttf"
			crossorigin
		/>
		<link
			rel="preload"
			href="/fonts/Pacifico/Pacifico-Regular.ttf"
			as="font"
			type="font/ttf"
			crossorigin
		/>
		<link rel="preload" href="/styles/reset.css" as="style" />
		<link rel="preload" href="/styles/global.css" as="style" />

		<!-- Styles -->
		<link rel="stylesheet" href="/styles/reset.css" />
		<link rel="stylesheet" href="/styles/global.css" />
	</head>
	<body class="no-transitions">
		<a href="#main-content" class="skip-link">Skip to main content</a>
		<Navbar role="banner" />
		<main id="main-content" aria-label="Main content">
			<slot />
		</main>
		<Footer />
		<script is:inline>
			// Immediately set theme from localStorage to prevent flash
			const savedTheme = localStorage.getItem('theme');
			const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
			const theme = savedTheme || (prefersDark ? 'dark' : 'light');
			document.documentElement.setAttribute('data-theme', theme);
			document.body.classList.remove('no-transitions');
		</script>
		<script>
			import "../scripts/theme.ts";
		</script>
	</body>
</html>

<style is:global>
	:root {
		/* Add transition properties for theme switching */
		--theme-transition-duration: 200ms;
		--theme-transition-easing: ease;
	}

	/* Add transition for theme-related properties */
	body,
	body *:not(script):not(style) {
		transition: background-color var(--theme-transition-duration) var(--theme-transition-easing),
					color var(--theme-transition-duration) var(--theme-transition-easing),
					border-color var(--theme-transition-duration) var(--theme-transition-easing),
					box-shadow var(--theme-transition-duration) var(--theme-transition-easing);
	}

	/* Disable transitions when user prefers reduced motion */
	@media (prefers-reduced-motion: reduce) {
		body,
		body *:not(script):not(style) {
			transition: none !important;
		}
	}

	/* Prevent transition on page load */
	.no-transitions * {
		transition: none !important;
	}
</style>

<style>
	.skip-link {
		position: absolute;
		top: -40px;
		left: 0;
		background: #000;
		color: white;
		padding: 8px;
		z-index: 100;
	}

	.skip-link:focus {
		top: 0;
	}
</style>
